{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nexport default {\n  mounted: function mounted() {\n    var _this = this;\n    if (this.title === \"Private Recipes\" || this.title === \"Family Recipes\") {\n      var _this$recipe;\n      if ((_this$recipe = this.recipe) !== null && _this$recipe !== void 0 && _this$recipe.image) {\n        // Handle base64 encoded image\n        this.image_src = \"data:image/png;base64,\".concat(this.recipe.image);\n        this.image_load = true;\n      } else {\n        console.error(\"No image data available for the recipe.\");\n        this.image_load = false;\n      }\n    } else {\n      var _this$recipe2;\n      // Fetch the image from the given URL\n      if ((_this$recipe2 = this.recipe) !== null && _this$recipe2 !== void 0 && _this$recipe2.image) {\n        this.axios.get(this.recipe.image, {\n          responseType: \"blob\"\n        }) // Ensure response is treated as binary data\n        .then(function (response) {\n          _this.image_src = URL.createObjectURL(response.data); // Convert blob to object URL\n          _this.image_load = true;\n        })[\"catch\"](function (error) {\n          console.error(\"Error loading image:\", error);\n          _this.image_load = false;\n        });\n      } else {\n        console.error(\"No image URL available for the recipe.\");\n        this.image_load = false;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      image_load: false,\n      image_src: \"\" // Initialize to an empty string\n    };\n  },\n  props: {\n    recipe: {\n      type: Object,\n      required: true\n    },\n    title: {\n      type: String,\n      required: true\n    }\n  }\n};","map":{"version":3,"names":["mounted","_this","title","_this$recipe","recipe","image","image_src","concat","image_load","console","error","_this$recipe2","axios","get","responseType","then","response","URL","createObjectURL","data","props","type","Object","required","String"],"sources":["src/components/RecipePreview.vue"],"sourcesContent":["<template>\n<!---->\n  <router-link :to=\"{ name: 'recipe', params: { recipeId: recipe.id, title:title } }\"\n    class=\"recipe-preview\"\n  >\n    <div class=\"recipe-body\">\n      <img v-if=\"this.title == 'Private Recipes' || this.title == 'Family Recipes'\" :src= \"this.image_src\" class=\"recipe-image\" alt=\"Red dot\"  />\n      <img v-else-if=\"image_load\" :src=\"recipe.image\" class=\"recipe-image\" />\n      \n    </div>\n    <div class=\"recipe-footer\">\n      <strong style=\"font-size:16px\" >\n        recipe\n        </strong>\n      <div :title=\"recipe.title\" class=\"recipe-title\">\n        {{ recipe.title }}\n      </div>\n      <div class=\"myFooter\">\n      <ul class=\"recipe-overview \">\n        \n        <li style=\"text-align: left;\">{{ recipe.readyInMinutes }} minutes</li>\n        <div v-if = \"title != 'Family Recipes' \" style=\"text-align: left; color: #f93f23;\">{{ recipe.popularity }}  \n        <p style=\"float:right;color: rgb(104, 104, 104);margin-left:10px;\"> likes</p>\n        </div>\n        \n      </ul>\n      </div>\n    </div>\n  </router-link>\n  \n    \n</template>\n\n<script>\nexport default {\n  mounted() {\n    if (this.title === \"Private Recipes\" || this.title === \"Family Recipes\") {\n      if (this.recipe?.image) {\n        // Handle base64 encoded image\n        this.image_src = `data:image/png;base64,${this.recipe.image}`;\n        this.image_load = true;\n      } else {\n        console.error(\"No image data available for the recipe.\");\n        this.image_load = false;\n      }\n    } else {\n      // Fetch the image from the given URL\n      if (this.recipe?.image) {\n        this.axios\n          .get(this.recipe.image, { responseType: \"blob\" }) // Ensure response is treated as binary data\n          .then((response) => {\n            this.image_src = URL.createObjectURL(response.data); // Convert blob to object URL\n            this.image_load = true;\n          })\n          .catch((error) => {\n            console.error(\"Error loading image:\", error);\n            this.image_load = false;\n          });\n      } else {\n        console.error(\"No image URL available for the recipe.\");\n        this.image_load = false;\n      }\n    }\n  },\n  data() {\n    return {\n      image_load: false,\n      image_src: \"\", // Initialize to an empty string\n    };\n  },\n  props: {\n    recipe: {\n      type: Object,\n      required: true\n    },\n    title: {\n      type: String,\n      required: true\n    }\n  }\n};\n</script>\n\n\n<style scoped>\n\n\n.recipe-preview {\n  \n  display: inline-block;\n  width: 100%;\n  /*height: 100%;*/\n  position: relative;\npadding: 0;\n}\n.recipe-preview > .recipe-body {\n  width: 100%;\n  /*height: 200px;*/\n  position: relative;\n  \n}\n\n.recipe-preview .recipe-body .recipe-image {\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: auto;\n  margin-bottom: auto;\n  display: block;\n  width: 100%;\n  \n  height: auto;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  background-size: cover;\n}\n\n.recipe-preview .recipe-footer {\n  width: 100%;\n  \n  overflow: hidden;\n}\n\n.recipe-preview .recipe-footer .recipe-title {\n  \n  padding: 10px 10px;\n  width: 100%;\n  \n  text-align: left;\n  white-space: nowrap;\n  overflow: hidden;\n  -o-text-overflow: ellipsis;\n  text-overflow: ellipsis;\n}\n\n.recipe-preview .recipe-footer ul.recipe-overview {\n  padding: 5px 10px;\n  width: 100%;\n  \n  display: -webkit-box;\n  display: -moz-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-flex: 1;\n  -moz-box-flex: 1;\n  -o-box-flex: 1;\n  box-flex: 1;\n  -webkit-flex: 1 auto;\n  -ms-flex: 1 auto;\n  flex: 1 auto;\n  table-layout: fixed;\n  margin-bottom: 0px;\n}\n\n.recipe-preview .recipe-footer ul.recipe-overview li {\n  -webkit-box-flex: 1;\n  \n  -moz-box-flex: 1;\n  -o-box-flex: 1;\n  -ms-box-flex: 1;\n  box-flex: 1;\n  -webkit-flex-grow: 1;\n  flex-grow: 1;\n  width: 90px;\n  display: table-cell;\n  text-align: center;\n}\n\nstrong{\n  padding-left: 10px;\n  padding-top:10px;\n  text-align: left;\n      color: #f93f23;\n    display: block;\n    font-size: .6875rem;\n    line-height: 1;\n    letter-spacing: 1px;\n    margin-bottom: 0.375rem;\n    text-transform: uppercase\n}\n\n.recipe-title\n{\n  color:rgb(60, 59, 59);\n  font: bold 1rem/1.25rem \"Source Serif Pro\",serif;\n    padding: 0;\n    font-size: 28px;\n}\na ,u {\n    color: #333;\n    line-height: normal;\n    text-decoration: none;\n    \n}\na:hover {\n text-decoration: none;\n}\n\n\n.myFooter\n{\n\ncolor: rgb(104, 104, 104);\nfont-weight: 600;\nmargin-top: 10px;\n\n\n\n  \n}\n</style>\n"],"mappings":";;;;;;;;;AAkCA;EACAA,OAAA,WAAAA,QAAA;IAAA,IAAAC,KAAA;IACA,SAAAC,KAAA,+BAAAA,KAAA;MAAA,IAAAC,YAAA;MACA,KAAAA,YAAA,QAAAC,MAAA,cAAAD,YAAA,eAAAA,YAAA,CAAAE,KAAA;QACA;QACA,KAAAC,SAAA,4BAAAC,MAAA,MAAAH,MAAA,CAAAC,KAAA;QACA,KAAAG,UAAA;MACA;QACAC,OAAA,CAAAC,KAAA;QACA,KAAAF,UAAA;MACA;IACA;MAAA,IAAAG,aAAA;MACA;MACA,KAAAA,aAAA,QAAAP,MAAA,cAAAO,aAAA,eAAAA,aAAA,CAAAN,KAAA;QACA,KAAAO,KAAA,CACAC,GAAA,MAAAT,MAAA,CAAAC,KAAA;UAAAS,YAAA;QAAA;QAAA,CACAC,IAAA,WAAAC,QAAA;UACAf,KAAA,CAAAK,SAAA,GAAAW,GAAA,CAAAC,eAAA,CAAAF,QAAA,CAAAG,IAAA;UACAlB,KAAA,CAAAO,UAAA;QACA,WACA,WAAAE,KAAA;UACAD,OAAA,CAAAC,KAAA,yBAAAA,KAAA;UACAT,KAAA,CAAAO,UAAA;QACA;MACA;QACAC,OAAA,CAAAC,KAAA;QACA,KAAAF,UAAA;MACA;IACA;EACA;EACAW,IAAA,WAAAA,KAAA;IACA;MACAX,UAAA;MACAF,SAAA;IACA;EACA;EACAc,KAAA;IACAhB,MAAA;MACAiB,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACArB,KAAA;MACAmB,IAAA,EAAAG,MAAA;MACAD,QAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
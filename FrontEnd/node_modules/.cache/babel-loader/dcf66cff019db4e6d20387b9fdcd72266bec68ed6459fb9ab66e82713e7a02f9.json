{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport cuisine from '../assets/cuisine';\nimport diet from '../assets/diet';\nimport intolerance from '../assets/intolerance';\nexport default {\n  name: \"MyFilter\",\n  data: function data() {\n    return {\n      types: cuisine,\n      diet: diet,\n      intol: intolerance,\n      selectedCusine: [],\n      selectedDiet: \"\",\n      selectedIntol: []\n    };\n  },\n  methods: {\n    getFilters: function getFilters() {\n      var res = [];\n      res.push(this.selectedCusine);\n      res.push(this.selectedDiet);\n      res.push(this.selectedIntol);\n      res.push(this.$el.querySelector(\"#numSel\").value);\n      res.push(this.$el.querySelector(\"#sel\").value);\n      return res;\n    },\n    cusSelected: function cusSelected(x) {\n      if (this.selectedCusine.includes(x)) {\n        var index = this.selectedCusine.indexOf(x);\n        this.selectedCusine.splice(index, 1);\n      } else {\n        this.selectedCusine.push(x);\n      }\n    },\n    dietSelected: function dietSelected(x) {\n      this.selectedDiet = x;\n    },\n    intoSelected: function intoSelected(x) {\n      if (this.selectedIntol.includes(x)) {\n        var index = this.selectedIntol.indexOf(x);\n        this.selectedIntol.splice(index, 1);\n      } else {\n        this.selectedIntol.push(x);\n      }\n    }\n  }\n};","map":{"version":3,"names":["cuisine","diet","intolerance","name","data","types","intol","selectedCusine","selectedDiet","selectedIntol","methods","getFilters","res","push","$el","querySelector","value","cusSelected","x","includes","index","indexOf","splice","dietSelected","intoSelected"],"sources":["src/components/CustomeFilter.vue"],"sourcesContent":["<template>\n\n    \n<div class=\"my-accordion\">\n \n  <!-- Using value -->\n  <div class=\"Category\">\n  <b-button v-b-toggle=\"'collapse-1'\" class=\"m-1\"  >Cusine</b-button>\n  <b-button v-b-toggle=\"'collapse-2'\" class=\"m-1\">Diet</b-button>\n  <b-button v-b-toggle=\"'collapse-3'\" class=\"m-1\">Intolerance</b-button>\n  <label>SortBy:</label>\n        <select  id=\"sel\">\n          <option value=\"Default\" selected>Default</option>\n          <option value=\"Prepare Time\">Prepare Time</option>\n          <option value=\"Stars\"> Stars</option>\n          \n        </select>\n        <label>num:</label>\n        <select id=\"numSel\">\n           \n            <option value=5 selected>5</option>\n          <option value=10>10</option>\n          <option value=15> 15</option>\n        </select>\n        \n       \n      \n  </div>\n  <!-- Element to collapse -->\n\n  <b-collapse id=\"collapse-1\"  data-bs-toggle=\"collapse\" accordion=\"my-accordion\"> \n    <div class=\"filter-content\"  > \n    <span class=\"checkbox\"  v-for=\"x in types\" :key=\"x\" > <input type=\"checkbox\" @click=\"cusSelected(x)\" :id=\"x\" ><label style=\"color:black\" :for=\"x\">{{x}}</label></span>\n    </div>\n  </b-collapse>\n\n    \n  <b-collapse id=\"collapse-2\"  accordion=\"my-accordion\" data-bs-toggle=\"collapse\">\n    <div class=\"filter-content\"  > \n    <span class=\"checkbox\"  v-for=\"x in diet\" :key=\"x\" > <input name=\"diet\"  type=\"radio\" @click=\"dietSelected(x)\" :id=\"x\"  >\n    <label :for=\"x\" style=\"color:black\">{{x}}</label></span>\n    </div>\n  </b-collapse>\n\n   <b-collapse id=\"collapse-3\" data-bs-toggle=\"collapse\" accordion=\"my-accordion\">\n    <div class=\"filter-content\"  > \n    <span class=\"checkbox\"  v-for=\"x in intol\" :key=\"x\" > <input type=\"checkbox\" @click=\"intoSelected(x)\" :id=\"x\" ><label  style=\"color:black\" :for=\"x\">{{x}}</label></span>\n    </div>\n     </b-collapse>\n \n\n\n</div>\n</template>\n\n<script>\nimport cuisine from '../assets/cuisine'\nimport diet from '../assets/diet'\nimport intolerance from '../assets/intolerance'\n\n\nexport default {\n    name:\"MyFilter\",\n\n    data()\n    {\n\n        return{\n            types:cuisine,\n            diet:diet,\n            intol:intolerance,\n            selectedCusine:[],\n            selectedDiet:\"\",\n            selectedIntol:[]\n          \n        }\n    }\n    ,\n    methods:\n    {\n        getFilters()\n        {\n\n\n            let res=[]\n            res.push(this.selectedCusine)\n            res.push(this.selectedDiet)\n            res.push(this.selectedIntol)\n\n            res.push(this.$el.querySelector(\"#numSel\").value)\n            res.push(this.$el.querySelector(\"#sel\").value)\n\n            return res\n\n\n        }\n       ,\n        cusSelected(x)\n        {\n            if(this.selectedCusine.includes(x))\n            {\n                let index=this.selectedCusine.indexOf(x)\n                this.selectedCusine.splice(index,1)\n            }\n            else\n            {\n                this.selectedCusine.push(x)\n            }\n    \n\n        }\n        ,dietSelected(x)\n        {\n             this.selectedDiet=x\n        }\n        ,\n\n        intoSelected(x){ \n            if(this.selectedIntol.includes(x))\n            {\n                let index=this.selectedIntol.indexOf(x)\n                this.selectedIntol.splice(index,1)\n            }\n            else\n            {\n                this.selectedIntol.push(x)\n            }\n    \n\n        }\n    }\n    \n}\n</script>\n\n<style scoped>\n.filter-content {\n    border-radius:10px ;\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    padding: 15px;\n    background: #fff;\n}\n\n\n.checkbox {\n    margin: 0;\n    padding: 5px 0;\n}\n.filter-content>span {\n    \n    min-width: calc(100% / 6 - 15px);\n    margin-left: 15px;\n    margin-bottom: 5px;\n}\nbutton{background-color: #66a992;;}\nlabel {\n    font-size: 15px;\n    display: inline-block;\n    padding:5px;\n    margin-bottom: 5px;\n    font-weight: 700;\n    color: white;\n}\nselect{\n  text-align: center;\n  color:white;\n  border-radius: 10px;\n  font-size: 15px;\n  background-color: #66a992;\n  font-weight: 600;\n  border:none;\n}\n.m-1\n{\n    \n    width:22%;\n  background-color: #66a992;\n    letter-spacing: 0.25em;\n    font-weight: 700;\n    border-color:#66a992;\n    \n}\n\n.Category{\n    padding:10;\n\n}\n.checkbox input[type=\"checkbox\"] + label:before, .checkbox input[type=\"radio\"] + label:before {\n    left: auto;\n    right: 0;\n}\n\n\n</style>"],"mappings":";;;;;AAwDA,OAAAA,OAAA;AACA,OAAAC,IAAA;AACA,OAAAC,WAAA;AAGA;EACAC,IAAA;EAEAC,IAAA,WAAAA,KAAA,EACA;IAEA;MACAC,KAAA,EAAAL,OAAA;MACAC,IAAA,EAAAA,IAAA;MACAK,KAAA,EAAAJ,WAAA;MACAK,cAAA;MACAC,YAAA;MACAC,aAAA;IAEA;EACA;EAEAC,OAAA,EACA;IACAC,UAAA,WAAAA,WAAA,EACA;MAGA,IAAAC,GAAA;MACAA,GAAA,CAAAC,IAAA,MAAAN,cAAA;MACAK,GAAA,CAAAC,IAAA,MAAAL,YAAA;MACAI,GAAA,CAAAC,IAAA,MAAAJ,aAAA;MAEAG,GAAA,CAAAC,IAAA,MAAAC,GAAA,CAAAC,aAAA,YAAAC,KAAA;MACAJ,GAAA,CAAAC,IAAA,MAAAC,GAAA,CAAAC,aAAA,SAAAC,KAAA;MAEA,OAAAJ,GAAA;IAGA;IAEAK,WAAA,WAAAA,YAAAC,CAAA,EACA;MACA,SAAAX,cAAA,CAAAY,QAAA,CAAAD,CAAA,GACA;QACA,IAAAE,KAAA,QAAAb,cAAA,CAAAc,OAAA,CAAAH,CAAA;QACA,KAAAX,cAAA,CAAAe,MAAA,CAAAF,KAAA;MACA,OAEA;QACA,KAAAb,cAAA,CAAAM,IAAA,CAAAK,CAAA;MACA;IAGA;IACAK,YAAA,WAAAA,aAAAL,CAAA,EACA;MACA,KAAAV,YAAA,GAAAU,CAAA;IACA;IAGAM,YAAA,WAAAA,aAAAN,CAAA;MACA,SAAAT,aAAA,CAAAU,QAAA,CAAAD,CAAA,GACA;QACA,IAAAE,KAAA,QAAAX,aAAA,CAAAY,OAAA,CAAAH,CAAA;QACA,KAAAT,aAAA,CAAAa,MAAA,CAAAF,KAAA;MACA,OAEA;QACA,KAAAX,aAAA,CAAAI,IAAA,CAAAK,CAAA;MACA;IAGA;EACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}